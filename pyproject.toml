[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "git-tidy"
version = "0.1.0"
description = "A tool for intelligently reordering git commits by grouping them based on file similarity"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Utilities",
]
keywords = ["git", "rebase", "commit", "grouping", "version-control"]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
]

[project.scripts]
git-tidy = "git_tidy.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/git-tidy"
Repository = "https://github.com/yourusername/git-tidy"
Issues = "https://github.com/yourusername/git-tidy/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/git_tidy"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CLAUDE.md",
]

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]